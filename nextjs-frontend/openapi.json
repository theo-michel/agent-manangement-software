{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/chat/agent": {
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Trigger Agent",
        "description": "Simple mock endpoint that takes a prompt and triggers an agent.",
        "operationId": "trigger_agent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/chat/outbound-call": {
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Trigger Outbound Call",
        "description": "D\u00e9clenche un appel sortant avec une Market Overview.\n\n- **target_number**: Num\u00e9ro de t\u00e9l\u00e9phone du destinataire (format E.164, ex: +33611421334)\n- **market_overview**: Texte de la Market Overview \u00e0 r\u00e9sumer pendant l'appel",
        "operationId": "trigger_outbound_call",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutboundCallRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutboundCallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/chat/new-card": {
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Create New Card From Prompt",
        "description": "Takes a natural language prompt and uses a smolagent to create a\nstructured new task card.",
        "operationId": "create_new_card_from_prompt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewCardAgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/chat/deep-search": {
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Perform Deep Search",
        "description": "Takes a prompt and uses a web-searching agent to find a\ncomprehensive answer.",
        "operationId": "perform_deep_search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgentRequest": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "context": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "AgentRequest",
        "description": "Generic request for any agent that takes a simple prompt."
      },
      "AgentResponse": {
        "properties": {
          "response": {
            "type": "string",
            "title": "Response"
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "execution_time": {
            "type": "number",
            "title": "Execution Time"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "response",
          "agent_id",
          "execution_time"
        ],
        "title": "AgentResponse",
        "description": "Generic response for an agent that returns a simple text response."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "NewCardAgentResponse": {
        "properties": {
          "card_data": {
            "$ref": "#/components/schemas/NewCardData"
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "execution_time": {
            "type": "number",
            "title": "Execution Time"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "card_data",
          "agent_id",
          "execution_time",
          "metadata"
        ],
        "title": "NewCardAgentResponse",
        "description": "The final, structured response from our endpoint."
      },
      "NewCardData": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "task_type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "status": {
            "type": "string",
            "const": "todo",
            "title": "Status",
            "default": "todo"
          },
          "parameters": {
            "$ref": "#/components/schemas/ResearchParameters"
          }
        },
        "type": "object",
        "required": [
          "title",
          "description",
          "task_type",
          "parameters"
        ],
        "title": "NewCardData",
        "description": "The structured data for our Kanban card. This is our target output."
      },
      "OutboundCallRequest": {
        "properties": {
          "target_number": {
            "type": "string",
            "title": "Target Number",
            "description": "Num\u00e9ro de t\u00e9l\u00e9phone du destinataire (format E.164)"
          },
          "market_overview": {
            "type": "string",
            "title": "Market Overview",
            "description": "Texte de la Market Overview \u00e0 r\u00e9sumer"
          }
        },
        "type": "object",
        "required": [
          "target_number",
          "market_overview"
        ],
        "title": "OutboundCallRequest",
        "example": {
          "market_overview": "The European ed-tech market grew 23% last year, with France and Germany leading demand in AI-powered language tools, while competition in the UK intensifies.",
          "target_number": "+33611421334"
        }
      },
      "OutboundCallResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "call_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Call Id"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "assistant_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assistant Id"
          },
          "execution_time": {
            "type": "number",
            "title": "Execution Time"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "execution_time"
        ],
        "title": "OutboundCallResponse"
      },
      "ResearchParameters": {
        "properties": {
          "topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "minItems": 1,
            "title": "Topics"
          },
          "scope": {
            "type": "string",
            "title": "Scope"
          }
        },
        "type": "object",
        "required": [
          "topics",
          "scope"
        ],
        "title": "ResearchParameters",
        "description": "Parameters for a research task. Pydantic validates this for us."
      },
      "TaskType": {
        "type": "string",
        "enum": [
          "research_task"
        ],
        "title": "TaskType",
        "description": "The types of tasks our agent can create. Start with one, add more later."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}