// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type OptionsLegacyParser,
} from "@hey-api/client-axios";
import type {
  TriggerAgentData,
  TriggerAgentError,
  TriggerAgentResponse,
  TriggerOutboundCallData,
  TriggerOutboundCallError,
  TriggerOutboundCallResponse,
  CreateNewCardFromPromptData,
  CreateNewCardFromPromptError,
  CreateNewCardFromPromptResponse,
  PerformDeepSearchData,
  PerformDeepSearchError,
  PerformDeepSearchResponse,
} from "./types.gen";

export const client = createClient(createConfig());

/**
 * Trigger Agent
 * Simple mock endpoint that takes a prompt and triggers an agent.
 */
export const triggerAgent = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<TriggerAgentData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    TriggerAgentResponse,
    TriggerAgentError,
    ThrowOnError
  >({
    ...options,
    url: "/chat/agent",
  });
};

/**
 * Trigger Outbound Call
 * Déclenche un appel sortant avec une Market Overview.
 *
 * - **target_number**: Numéro de téléphone du destinataire (format E.164, ex: +33611421334)
 * - **market_overview**: Texte de la Market Overview à résumer pendant l'appel
 * - **name**: Nom de la personne à qui on passe l'appel
 * - **action_to_take**: Action à entreprendre pendant l'appel
 */
export const triggerOutboundCall = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<TriggerOutboundCallData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    TriggerOutboundCallResponse,
    TriggerOutboundCallError,
    ThrowOnError
  >({
    ...options,
    url: "/chat/outbound-call",
  });
};

/**
 * Create New Card From Prompt
 * Takes a natural language prompt and uses a smolagent to create a
 * structured new task card.
 */
export const createNewCardFromPrompt = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<CreateNewCardFromPromptData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    CreateNewCardFromPromptResponse,
    CreateNewCardFromPromptError,
    ThrowOnError
  >({
    ...options,
    url: "/chat/new-card",
  });
};

/**
 * Perform Deep Search
 * Takes a prompt and uses a web-searching agent to find a
 * comprehensive answer.
 */
export const performDeepSearch = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<PerformDeepSearchData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PerformDeepSearchResponse,
    PerformDeepSearchError,
    ThrowOnError
  >({
    ...options,
    url: "/chat/deep-search",
  });
};
